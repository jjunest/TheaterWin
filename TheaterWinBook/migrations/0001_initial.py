# Generated by Django 5.1.5 on 2025-01-29 15:00

import datetime
import django.db.models.deletion
import django.utils.timezone
import tinymce.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FullvestingApi',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullvesting_text', models.CharField(blank=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='FreeBoard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('writing_date', models.DateField(default=datetime.datetime.now)),
                ('freeBoard_title', models.CharField(max_length=200)),
                ('freeBoard_content', tinymce.models.HTMLField(blank=True)),
                ('freeBoard_isanswer', models.IntegerField(default=0)),
                ('freeBoard_hit', models.IntegerField(default=0)),
                ('freeBoard_groupnum', models.IntegerField(default=0)),
                ('freeBoard_sequencenum_ingroup', models.IntegerField(default=0)),
                ('freeBoard_level_ingorup', models.IntegerField(default=0)),
                ('etc_memo', models.CharField(blank=True, max_length=200)),
                ('user_name', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FreeBoardInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('freeBoard_thumbup', models.IntegerField(default=0)),
                ('freeBoard_thumbdown', models.IntegerField(default=0)),
                ('freeBoard_warning', models.IntegerField(default=0)),
                ('by_whom', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('freeBoard_fk', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='TheaterWinBook.freeboard')),
            ],
        ),
        migrations.CreateModel(
            name='FreeBoardprof',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('writing_date', models.DateField(default=datetime.datetime.now)),
                ('freeBoardprof_title', models.CharField(max_length=200)),
                ('freeBoardprof_content', tinymce.models.HTMLField(blank=True)),
                ('freeBoardprof_isanswer', models.IntegerField(default=0)),
                ('freeBoardprof_hit', models.IntegerField(default=0)),
                ('freeBoardprof_groupnum', models.IntegerField(default=0)),
                ('freeBoardprof_sequencenum_ingroup', models.IntegerField(default=0)),
                ('freeBoardprof_level_ingorup', models.IntegerField(default=0)),
                ('etc_memo', models.CharField(blank=True, max_length=200)),
                ('user_name', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FreeBoardprofInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('freeBoardprof_thumbup', models.IntegerField(default=0)),
                ('freeBoardprof_thumbdown', models.IntegerField(default=0)),
                ('freeBoardprof_warning', models.IntegerField(default=0)),
                ('by_whom', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('freeBoardprof_fk', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='TheaterWinBook.freeboardprof')),
            ],
        ),
        migrations.CreateModel(
            name='FreeBoardprofReply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('writing_date', models.DateField(default=datetime.datetime.now)),
                ('freeBoardprof_reply_content', models.CharField(max_length=200)),
                ('freeBoardprof_reply_thumbup', models.IntegerField(default=0)),
                ('freeBoardprof_reply_thumbdown', models.IntegerField(default=0)),
                ('freeBoardprof_reply_warning', models.IntegerField(default=0)),
                ('reply_groupnum', models.IntegerField(default=0)),
                ('reply_sequencenum_ingroup', models.IntegerField(default=0)),
                ('reply_level_ingorup', models.IntegerField(default=0)),
                ('by_whom', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('freeBoardprof_fk', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='TheaterWinBook.freeboardprof')),
            ],
        ),
        migrations.CreateModel(
            name='FreeBoardReply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('writing_date', models.DateField(default=datetime.datetime.now)),
                ('freeBoard_reply_content', models.CharField(max_length=200)),
                ('freeBoard_reply_thumbup', models.IntegerField(default=0)),
                ('freeBoard_reply_thumbdown', models.IntegerField(default=0)),
                ('freeBoard_reply_warning', models.IntegerField(default=0)),
                ('reply_groupnum', models.IntegerField(default=0)),
                ('reply_sequencenum_ingroup', models.IntegerField(default=0)),
                ('reply_level_ingorup', models.IntegerField(default=0)),
                ('by_whom', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('freeBoard_fk', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='TheaterWinBook.freeboard')),
            ],
        ),
        migrations.CreateModel(
            name='FreeBoardstock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('writing_date', models.DateField(default=datetime.datetime.now)),
                ('freeBoardstock_title', models.CharField(max_length=200)),
                ('freeBoardstock_content', tinymce.models.HTMLField(blank=True)),
                ('freeBoardstock_isanswer', models.IntegerField(default=0)),
                ('freeBoardstock_hit', models.IntegerField(default=0)),
                ('freeBoardstock_groupnum', models.IntegerField(default=0)),
                ('freeBoardstock_sequencenum_ingroup', models.IntegerField(default=0)),
                ('freeBoardstock_level_ingorup', models.IntegerField(default=0)),
                ('etc_memo', models.CharField(blank=True, max_length=200)),
                ('user_name', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FreeBoardstockInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('freeBoardstock_thumbup', models.IntegerField(default=0)),
                ('freeBoardstock_thumbdown', models.IntegerField(default=0)),
                ('freeBoardstock_warning', models.IntegerField(default=0)),
                ('by_whom', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('freeBoardstock_fk', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='TheaterWinBook.freeboardstock')),
            ],
        ),
        migrations.CreateModel(
            name='FreeBoardstockReply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('writing_date', models.DateField(default=datetime.datetime.now)),
                ('freeBoardstock_reply_content', models.CharField(max_length=200)),
                ('freeBoardstock_reply_thumbup', models.IntegerField(default=0)),
                ('freeBoardstock_reply_thumbdown', models.IntegerField(default=0)),
                ('freeBoardstock_reply_warning', models.IntegerField(default=0)),
                ('reply_groupnum', models.IntegerField(default=0)),
                ('reply_sequencenum_ingroup', models.IntegerField(default=0)),
                ('reply_level_ingorup', models.IntegerField(default=0)),
                ('by_whom', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('freeBoardstock_fk', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='TheaterWinBook.freeboardstock')),
            ],
        ),
        migrations.CreateModel(
            name='Full_Chatting_Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('timestamp', models.DateTimeField()),
                ('writer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('text', models.TextField()),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_date2', models.DateTimeField(default=django.utils.timezone.now)),
                ('published_date', models.DateTimeField(blank=True, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StockCoreInfoKr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bat_time', models.DateTimeField(default=datetime.datetime.now)),
                ('info_date', models.DateField(default=datetime.datetime.now)),
                ('stock_code', models.CharField(max_length=10)),
                ('stock_country', models.CharField(max_length=1)),
                ('vesting_type', models.CharField(max_length=1)),
                ('vesting_type_detail', models.CharField(max_length=1)),
                ('stock_name', models.CharField(blank=True, max_length=15)),
                ('stock_eps', models.FloatField(blank=True, null=True)),
                ('stock_bps', models.FloatField(blank=True, null=True)),
                ('stock_per', models.FloatField(blank=True, null=True)),
                ('stock_similar_per', models.FloatField(blank=True, null=True)),
                ('stock_pbr', models.FloatField(blank=True, null=True)),
                ('stock_allocation_ratio', models.FloatField(blank=True, null=True)),
                ('stock_first_price', models.FloatField(blank=True, null=True)),
                ('stock_share_total_num', models.FloatField(blank=True, null=True)),
                ('stock_current_ratio', models.FloatField(blank=True, null=True)),
                ('stock_ratio_return_month', models.FloatField(blank=True, null=True)),
                ('stock_ratio_return_quarter', models.FloatField(blank=True, null=True)),
                ('stock_ratio_return_half', models.FloatField(blank=True, null=True)),
                ('stock_ratio_return_year', models.FloatField(blank=True, null=True)),
                ('stock_per_expectation', models.FloatField(blank=True, null=True)),
                ('stock_per_announce', models.FloatField(blank=True, null=True)),
                ('stock_pbr_expectation', models.FloatField(blank=True, null=True)),
                ('stock_pbr_announce', models.FloatField(blank=True, null=True)),
                ('stock_pcr_expectation', models.FloatField(blank=True, null=True)),
                ('stock_pcr_announce', models.FloatField(blank=True, null=True)),
                ('stock_ev_ebitda_expectation', models.FloatField(blank=True, null=True)),
                ('stock_ev_ebitda_announce', models.FloatField(blank=True, null=True)),
                ('stock_eps_expectation', models.FloatField(blank=True, null=True)),
                ('stock_eps_announcement', models.FloatField(blank=True, null=True)),
                ('stock_bps_expectation', models.FloatField(blank=True, null=True)),
                ('stock_bps_announcement', models.FloatField(blank=True, null=True)),
                ('stock_ebitda_expectation', models.FloatField(blank=True, null=True)),
                ('stock_ebitda_announcement', models.FloatField(blank=True, null=True)),
                ('stock_cash_dps_expectation', models.FloatField(blank=True, null=True)),
                ('stock_cash_dps_announcement', models.FloatField(blank=True, null=True)),
                ('stock_allocation_expectation', models.FloatField(blank=True, null=True)),
                ('stock_allocation_announcement', models.FloatField(blank=True, null=True)),
                ('stock_total_revenue_expq', models.FloatField(blank=True, null=True)),
                ('stock_total_revenue_one_pastq', models.FloatField(blank=True, null=True)),
                ('stock_total_revenue_two_pastq', models.FloatField(blank=True, null=True)),
                ('stock_total_revenue_three_pastq', models.FloatField(blank=True, null=True)),
                ('stock_operating_profit_expq', models.FloatField(blank=True, null=True)),
                ('stock_operating_profit_one_pastq', models.FloatField(blank=True, null=True)),
                ('stock_operating_profit_two_pastq', models.FloatField(blank=True, null=True)),
                ('stock_operating_profit_three_pastq', models.FloatField(blank=True, null=True)),
                ('stock_operating_profit_public_expq', models.FloatField(blank=True, null=True)),
                ('stock_operating_profit_public_one_pastq', models.FloatField(blank=True, null=True)),
                ('stock_operating_profit_public_two_pastq', models.FloatField(blank=True, null=True)),
                ('stock_operating_profit_public_three_pastq', models.FloatField(blank=True, null=True)),
                ('stock_profit_from_continuing_expq', models.FloatField(blank=True, null=True)),
                ('stock_profit_from_continuing_one_pastq', models.FloatField(blank=True, null=True)),
                ('stock_profit_from_continuing_two_pastq', models.FloatField(blank=True, null=True)),
                ('stock_profit_from_continuing_three_pastq', models.FloatField(blank=True, null=True)),
                ('stock_netincome_expq', models.FloatField(blank=True, null=True)),
                ('stock_netincome_one_pastq', models.FloatField(blank=True, null=True)),
                ('stock_netincome_two_pastq', models.FloatField(blank=True, null=True)),
                ('stock_netincome_three_pastq', models.FloatField(blank=True, null=True)),
                ('stock_asset_expq', models.FloatField(blank=True, null=True)),
                ('stock_asset_one_pastq', models.FloatField(blank=True, null=True)),
                ('stock_asset_two_pastq', models.FloatField(blank=True, null=True)),
                ('stock_asset_three_pastq', models.FloatField(blank=True, null=True)),
                ('stock_liabilities_expq', models.FloatField(blank=True, null=True)),
                ('stock_liabilities_one_pastq', models.FloatField(blank=True, null=True)),
                ('stock_liabilities_two_pastq', models.FloatField(blank=True, null=True)),
                ('stock_liabilities_three_pastq', models.FloatField(blank=True, null=True)),
                ('stock_equity_expq', models.FloatField(blank=True, null=True)),
                ('stock_equity_one_pastq', models.FloatField(blank=True, null=True)),
                ('stock_equity_two_pastq', models.FloatField(blank=True, null=True)),
                ('stock_equity_three_pastq', models.FloatField(blank=True, null=True)),
                ('stock_capital_expq', models.FloatField(blank=True, null=True)),
                ('stock_capital_one_pastq', models.FloatField(blank=True, null=True)),
                ('stock_capital_two_pastq', models.FloatField(blank=True, null=True)),
                ('stock_capital_three_pastq', models.FloatField(blank=True, null=True)),
                ('stock_cashflow_operating_expq', models.FloatField(blank=True, null=True)),
                ('stock_cashflow_operating_one_pastq', models.FloatField(blank=True, null=True)),
                ('stock_cashflow_operating_two_pastq', models.FloatField(blank=True, null=True)),
                ('stock_cashflow_operating_three_pastq', models.FloatField(blank=True, null=True)),
                ('stock_cashflow_investing_expq', models.FloatField(blank=True, null=True)),
                ('stock_cashflow_investing_one_pastq', models.FloatField(blank=True, null=True)),
                ('stock_cashflow_investing_two_pastq', models.FloatField(blank=True, null=True)),
                ('stock_cashflow_investing_three_pastq', models.FloatField(blank=True, null=True)),
                ('stock_cashflow_financing_expq', models.FloatField(blank=True, null=True)),
                ('stock_cashflow_financing_one_pastq', models.FloatField(blank=True, null=True)),
                ('stock_cashflow_financing_two_pastq', models.FloatField(blank=True, null=True)),
                ('stock_cashflow_financing_three_pastq', models.FloatField(blank=True, null=True)),
                ('stock_capex_expq', models.FloatField(blank=True, null=True)),
                ('stock_capex_one_pastq', models.FloatField(blank=True, null=True)),
                ('stock_capex_two_pastq', models.FloatField(blank=True, null=True)),
                ('stock_capex_three_pastq', models.FloatField(blank=True, null=True)),
                ('stock_fcf_expq', models.FloatField(blank=True, null=True)),
                ('stock_fcf_one_pastq', models.FloatField(blank=True, null=True)),
                ('stock_fcf_two_pastq', models.FloatField(blank=True, null=True)),
                ('stock_fcf_three_pastq', models.FloatField(blank=True, null=True)),
                ('stock_ibl_expq', models.FloatField(blank=True, null=True)),
                ('stock_ibl_one_pastq', models.FloatField(blank=True, null=True)),
                ('stock_ibl_two_pastq', models.FloatField(blank=True, null=True)),
                ('stock_ibl_three_pastq', models.FloatField(blank=True, null=True)),
                ('stock_operating_margin_ratio_expq', models.FloatField(blank=True, null=True)),
                ('stock_operating_margin_ratio_one_pastq', models.FloatField(blank=True, null=True)),
                ('stock_operating_margin_ratio_two_pastq', models.FloatField(blank=True, null=True)),
                ('stock_operating_margin_ratio_three_pastq', models.FloatField(blank=True, null=True)),
                ('stock_netprofit_ratio_expq', models.FloatField(blank=True, null=True)),
                ('stock_netprofit_ratio_one_pastq', models.FloatField(blank=True, null=True)),
                ('stock_netprofit_ratio_two_pastq', models.FloatField(blank=True, null=True)),
                ('stock_netprofit_ratio_three_pastq', models.FloatField(blank=True, null=True)),
                ('stock_roe_ratio_expq', models.FloatField(blank=True, null=True)),
                ('stock_roe_ratio_one_pastq', models.FloatField(blank=True, null=True)),
                ('stock_roe_ratio_two_pastq', models.FloatField(blank=True, null=True)),
                ('stock_roe_ratio_three_pastq', models.FloatField(blank=True, null=True)),
                ('stock_roa_ratio_expq', models.FloatField(blank=True, null=True)),
                ('stock_roa_ratio_one_pastq', models.FloatField(blank=True, null=True)),
                ('stock_roa_ratio_two_pastq', models.FloatField(blank=True, null=True)),
                ('stock_roa_ratio_three_pastq', models.FloatField(blank=True, null=True)),
                ('stock_debt_ratio_expq', models.FloatField(blank=True, null=True)),
                ('stock_debt_ratio_one_pastq', models.FloatField(blank=True, null=True)),
                ('stock_debt_ratio_two_pastq', models.FloatField(blank=True, null=True)),
                ('stock_debt_ratio_three_pastq', models.FloatField(blank=True, null=True)),
                ('stock_capital_retention_rate_expq', models.FloatField(blank=True, null=True)),
                ('stock_capital_retention_rate_one_pastq', models.FloatField(blank=True, null=True)),
                ('stock_capital_retention_rate_two_pastq', models.FloatField(blank=True, null=True)),
                ('stock_capital_retention_rate_three_pastq', models.FloatField(blank=True, null=True)),
                ('stock_eps_expq', models.FloatField(blank=True, null=True)),
                ('stock_eps_one_pastq', models.FloatField(blank=True, null=True)),
                ('stock_eps_two_pastq', models.FloatField(blank=True, null=True)),
                ('stock_eps_three_pastq', models.FloatField(blank=True, null=True)),
                ('stock_per_expq', models.FloatField(blank=True, null=True)),
                ('stock_per_one_pastq', models.FloatField(blank=True, null=True)),
                ('stock_per_two_pastq', models.FloatField(blank=True, null=True)),
                ('stock_per_three_pastq', models.FloatField(blank=True, null=True)),
                ('stock_bps_expq', models.FloatField(blank=True, null=True)),
                ('stock_bps_one_pastq', models.FloatField(blank=True, null=True)),
                ('stock_bps_two_pastq', models.FloatField(blank=True, null=True)),
                ('stock_bps_three_pastq', models.FloatField(blank=True, null=True)),
                ('stock_pbr_expq', models.FloatField(blank=True, null=True)),
                ('stock_pbr_one_pastq', models.FloatField(blank=True, null=True)),
                ('stock_pbr_two_pastq', models.FloatField(blank=True, null=True)),
                ('stock_pbr_three_pastq', models.FloatField(blank=True, null=True)),
                ('stock_cash_dps_expq', models.FloatField(blank=True, null=True)),
                ('stock_cash_dps_one_pastq', models.FloatField(blank=True, null=True)),
                ('stock_cash_dps_two_pastq', models.FloatField(blank=True, null=True)),
                ('stock_cash_dps_three_pastq', models.FloatField(blank=True, null=True)),
                ('stock_allocation_ratio_expq', models.FloatField(blank=True, null=True)),
                ('stock_allocation_ratio_one_pastq', models.FloatField(blank=True, null=True)),
                ('stock_allocation_ratio_two_pastq', models.FloatField(blank=True, null=True)),
                ('stock_allocation_ratio_three_pastq', models.FloatField(blank=True, null=True)),
                ('stock_payout_ratio_expq', models.FloatField(blank=True, null=True)),
                ('stock_payout_ratio_one_pastq', models.FloatField(blank=True, null=True)),
                ('stock_payout_ratio_two_pastq', models.FloatField(blank=True, null=True)),
                ('stock_payout_ratio_three_pastq', models.FloatField(blank=True, null=True)),
                ('etc1_string', models.CharField(blank=True, max_length=1)),
                ('etc2_string', models.CharField(blank=True, max_length=1)),
                ('etc3_string', models.CharField(blank=True, max_length=1)),
                ('etc4_string', models.CharField(blank=True, max_length=1)),
                ('etc5_string', models.CharField(blank=True, max_length=1)),
                ('etc1_int', models.SmallIntegerField(blank=True, null=True)),
                ('etc2_int', models.SmallIntegerField(blank=True, null=True)),
                ('etc3_int', models.SmallIntegerField(blank=True, null=True)),
                ('etc4_int', models.SmallIntegerField(blank=True, null=True)),
                ('etc5_int', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'unique_together': {('info_date', 'stock_code', 'stock_country', 'vesting_type', 'vesting_type_detail')},
            },
        ),
        migrations.CreateModel(
            name='StockGroupKr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bat_time', models.DateTimeField(default=datetime.datetime.now)),
                ('info_date', models.DateField(default=datetime.datetime.now)),
                ('stock_code', models.CharField(max_length=10)),
                ('stock_country', models.CharField(max_length=1)),
                ('vesting_type', models.CharField(max_length=1)),
                ('stock_name', models.CharField(blank=True, max_length=15)),
                ('stock_group', models.CharField(blank=True, max_length=30)),
                ('stock_theme', models.CharField(blank=True, max_length=30)),
                ('etc1_string', models.CharField(blank=True, max_length=1)),
                ('etc2_string', models.CharField(blank=True, max_length=1)),
                ('etc3_string', models.CharField(blank=True, max_length=1)),
                ('etc4_string', models.CharField(blank=True, max_length=1)),
                ('etc5_string', models.CharField(blank=True, max_length=1)),
                ('etc1_int', models.SmallIntegerField(blank=True, null=True)),
                ('etc2_int', models.SmallIntegerField(blank=True, null=True)),
                ('etc3_int', models.SmallIntegerField(blank=True, null=True)),
                ('etc4_int', models.SmallIntegerField(blank=True, null=True)),
                ('etc5_int', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'unique_together': {('info_date', 'stock_code', 'stock_country', 'vesting_type')},
            },
        ),
        migrations.CreateModel(
            name='StockIfrsKr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bat_time', models.DateTimeField(default=datetime.datetime.now)),
                ('info_date', models.DateField(default=datetime.datetime.now)),
                ('ifrs_date', models.DateField(default=datetime.datetime.now)),
                ('stock_code', models.CharField(max_length=5)),
                ('stock_country', models.CharField(max_length=1)),
                ('ifrs_type', models.CharField(max_length=1)),
                ('vesting_type', models.CharField(max_length=1)),
                ('vesting_type_detail', models.CharField(max_length=1)),
                ('stock_name', models.CharField(blank=True, max_length=15)),
                ('stock_revenue', models.IntegerField(blank=True, null=True)),
                ('operating_income', models.IntegerField(blank=True, null=True)),
                ('net_income', models.IntegerField(blank=True, null=True)),
                ('operating_income_ratio', models.FloatField(blank=True, null=True)),
                ('income_ratio', models.FloatField(blank=True, null=True)),
                ('roe', models.FloatField(blank=True, null=True)),
                ('debt_ratio', models.FloatField(blank=True, null=True)),
                ('quick_ratio', models.FloatField(blank=True, null=True)),
                ('reserve_ratio', models.FloatField(blank=True, null=True)),
                ('stock_eps', models.IntegerField(blank=True, null=True)),
                ('stock_per', models.FloatField(blank=True, null=True)),
                ('stock_bps', models.IntegerField(blank=True, null=True)),
                ('stock_pbr', models.FloatField(blank=True, null=True)),
                ('dividend_per_share', models.IntegerField(blank=True, null=True)),
                ('dividend_yield_ratio', models.FloatField(blank=True, null=True)),
                ('dividend_payout_ratio', models.FloatField(blank=True, null=True)),
                ('etc1_string', models.CharField(blank=True, max_length=1)),
                ('etc2_string', models.CharField(blank=True, max_length=1)),
                ('etc3_string', models.CharField(blank=True, max_length=1)),
                ('etc1_int', models.SmallIntegerField(blank=True, null=True)),
                ('etc2_int', models.SmallIntegerField(blank=True, null=True)),
                ('etc3_int', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'unique_together': {('info_date', 'ifrs_date', 'stock_code', 'stock_country', 'ifrs_type', 'vesting_type', 'vesting_type_detail')},
            },
        ),
        migrations.CreateModel(
            name='StockList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stock_code_full', models.CharField(default=None, max_length=14, null=True)),
                ('stock_code', models.CharField(max_length=10)),
                ('stock_country', models.CharField(max_length=1)),
                ('vesting_type', models.CharField(max_length=1)),
                ('vesting_type_detail', models.CharField(default=None, max_length=1, null=True)),
                ('stock_name', models.CharField(blank=True, max_length=15)),
                ('etc1_string', models.CharField(blank=True, max_length=1)),
                ('etc2_string', models.CharField(blank=True, max_length=1)),
                ('etc3_string', models.CharField(blank=True, max_length=1)),
                ('etc4_string', models.CharField(blank=True, max_length=1)),
                ('etc5_string', models.CharField(blank=True, max_length=1)),
                ('etc1_int', models.SmallIntegerField(blank=True, null=True)),
                ('etc2_int', models.SmallIntegerField(blank=True, null=True)),
                ('etc3_int', models.SmallIntegerField(blank=True, null=True)),
                ('etc4_int', models.SmallIntegerField(blank=True, null=True)),
                ('etc5_int', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'unique_together': {('stock_code_full', 'stock_code', 'stock_country', 'vesting_type', 'vesting_type_detail')},
            },
        ),
        migrations.CreateModel(
            name='StockSummaryKr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bat_time', models.DateTimeField(default=datetime.datetime.now)),
                ('info_date', models.DateField(default=datetime.datetime.now)),
                ('stock_code', models.CharField(max_length=10)),
                ('stock_country', models.CharField(max_length=1)),
                ('vesting_type', models.CharField(max_length=1)),
                ('vesting_type_detail', models.CharField(max_length=1)),
                ('stock_name', models.CharField(blank=True, max_length=15)),
                ('stock_market_sum', models.IntegerField(blank=True, null=True)),
                ('stock_share_total_num', models.IntegerField(blank=True, null=True)),
                ('stock_first_price', models.IntegerField(blank=True, null=True)),
                ('stock_foreign_share_max', models.IntegerField(blank=True, null=True)),
                ('stock_foreign_share_num', models.IntegerField(blank=True, null=True)),
                ('stock_foreign_share_percent', models.FloatField(blank=True, null=True)),
                ('stock_maxprice_year', models.IntegerField(blank=True, null=True)),
                ('stock_lowprice_year', models.IntegerField(blank=True, null=True)),
                ('stock_per', models.FloatField(blank=True, null=True)),
                ('stock_eps', models.IntegerField(blank=True, null=True)),
                ('stock_per_guess', models.FloatField(blank=True, null=True)),
                ('stock_eps_guess', models.IntegerField(blank=True, null=True)),
                ('stock_pbr', models.FloatField(blank=True, null=True)),
                ('stock_bps', models.IntegerField(blank=True, null=True)),
                ('stock_allocation_ratio', models.FloatField(blank=True, null=True)),
                ('stock_similar_per', models.FloatField(blank=True, null=True)),
                ('stock_now', models.IntegerField(blank=True, null=True)),
                ('stock_close', models.IntegerField(blank=True, null=True)),
                ('stock_open', models.IntegerField(blank=True, null=True)),
                ('stock_high', models.IntegerField(blank=True, null=True)),
                ('stock_low', models.IntegerField(blank=True, null=True)),
                ('stock_volume_share', models.IntegerField(blank=True, null=True)),
                ('stock_volume_money', models.IntegerField(blank=True, null=True)),
                ('stock_trading_sum_foreign', models.IntegerField(blank=True, null=True)),
                ('stock_trading_sum_agency', models.IntegerField(blank=True, null=True)),
                ('stock_trading_sum_ant', models.IntegerField(blank=True, null=True)),
                ('stock_agency_buy_top1', models.CharField(blank=True, max_length=15)),
                ('stock_agency_buy_top1_vol', models.IntegerField(blank=True, null=True)),
                ('stock_agency_buy_top2', models.CharField(blank=True, max_length=15)),
                ('stock_agency_buy_top2_vol', models.IntegerField(blank=True, null=True)),
                ('stock_agency_buy_top3', models.CharField(blank=True, max_length=15)),
                ('stock_agency_buy_top3_vol', models.IntegerField(blank=True, null=True)),
                ('stock_agency_buy_top4', models.CharField(blank=True, max_length=15)),
                ('stock_agency_buy_top4_vol', models.IntegerField(blank=True, null=True)),
                ('stock_agency_buy_top5', models.CharField(blank=True, max_length=15)),
                ('stock_agency_buy_top5_vol', models.IntegerField(blank=True, null=True)),
                ('stock_agency_sell_top1', models.CharField(blank=True, max_length=15)),
                ('stock_agency_sell_top1_vol', models.IntegerField(blank=True, null=True)),
                ('stock_agency_sell_top2', models.CharField(blank=True, max_length=15)),
                ('stock_agency_sell_top2_vol', models.IntegerField(blank=True, null=True)),
                ('stock_agency_sell_top3', models.CharField(blank=True, max_length=15)),
                ('stock_agency_sell_top3_vol', models.IntegerField(blank=True, null=True)),
                ('stock_agency_sell_top4', models.CharField(blank=True, max_length=15)),
                ('stock_agency_sell_top4_vol', models.IntegerField(blank=True, null=True)),
                ('stock_agency_sell_top5', models.CharField(blank=True, max_length=15)),
                ('stock_agency_sell_top5_vol', models.IntegerField(blank=True, null=True)),
                ('etc1_string', models.CharField(blank=True, max_length=1)),
                ('etc2_string', models.CharField(blank=True, max_length=1)),
                ('etc3_string', models.CharField(blank=True, max_length=1)),
                ('etc4_string', models.CharField(blank=True, max_length=1)),
                ('etc5_string', models.CharField(blank=True, max_length=1)),
                ('etc1_int', models.SmallIntegerField(blank=True, null=True)),
                ('etc2_int', models.SmallIntegerField(blank=True, null=True)),
                ('etc3_int', models.SmallIntegerField(blank=True, null=True)),
                ('etc4_int', models.SmallIntegerField(blank=True, null=True)),
                ('etc5_int', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'unique_together': {('info_date', 'stock_code', 'stock_country', 'vesting_type', 'vesting_type_detail')},
            },
        ),
        migrations.CreateModel(
            name='TheaterWinBookRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('buy_date', models.DateField(blank=True, default=datetime.datetime.now)),
                ('writing_date', models.DateField(default=datetime.datetime.now)),
                ('buy_game_title', models.CharField(blank=True, max_length=200)),
                ('batting_ratio', models.FloatField(blank=True, default=0)),
                ('batting_money', models.IntegerField(blank=True, default=0)),
                ('folder_num', models.IntegerField(blank=True, default=1)),
                ('win_check', models.IntegerField(default=1)),
                ('etc_memo', models.CharField(blank=True, max_length=200)),
                ('share_check', models.IntegerField(default=0)),
                ('hit_count', models.IntegerField(blank=True, default=0)),
                ('user_name', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TheaterWinBookRecordInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_thumbup', models.IntegerField(default=0)),
                ('record_thumbdown', models.IntegerField(default=0)),
                ('record_warning', models.IntegerField(default=0)),
                ('by_whom', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('record_fk', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='TheaterWinBook.theaterwinbookrecord')),
            ],
        ),
        migrations.CreateModel(
            name='TheaterWinBookRecordReply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('writing_date', models.DateField(default=datetime.datetime.now)),
                ('record_reply_content', models.CharField(max_length=200)),
                ('record_groupnum', models.IntegerField(default=0)),
                ('record_sequencenum_ingroup', models.IntegerField(default=0)),
                ('record_level_ingorup', models.IntegerField(default=0)),
                ('by_whom', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('record_fk', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='TheaterWinBook.theaterwinbookrecord')),
            ],
        ),
        migrations.CreateModel(
            name='TheaterWinQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('writing_date', models.DateField(default=datetime.datetime.now)),
                ('question_title', models.CharField(max_length=200)),
                ('question_content', tinymce.models.HTMLField(blank=True)),
                ('question_isanswer', models.IntegerField(default=0)),
                ('question_hit', models.IntegerField(default=0)),
                ('question_groupnum', models.IntegerField(default=0)),
                ('question_sequencenum_ingroup', models.IntegerField(default=0)),
                ('question_level_ingorup', models.IntegerField(default=0)),
                ('etc_memo', models.CharField(blank=True, max_length=200)),
                ('user_name', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TheaterWinQuestionInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_thumbup', models.IntegerField(default=0)),
                ('question_thumbdown', models.IntegerField(default=0)),
                ('question_warning', models.IntegerField(default=0)),
                ('by_whom', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('question_fk', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='TheaterWinBook.theaterwinquestion')),
            ],
        ),
        migrations.CreateModel(
            name='TheaterWinQuestionReply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('writing_date', models.DateField(default=datetime.datetime.now)),
                ('question_reply_content', models.CharField(max_length=200)),
                ('question_reply_thumbup', models.IntegerField(default=0)),
                ('question_reply_thumbdown', models.IntegerField(default=0)),
                ('question_reply_warning', models.IntegerField(default=0)),
                ('reply_groupnum', models.IntegerField(default=0)),
                ('reply_sequencenum_ingroup', models.IntegerField(default=0)),
                ('reply_level_ingorup', models.IntegerField(default=0)),
                ('by_whom', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('question_fk', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='TheaterWinBook.theaterwinquestion')),
            ],
        ),
    ]
